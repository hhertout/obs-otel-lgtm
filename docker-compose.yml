services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./conf/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317" # GRPC endpoint
      - "4318:4318" # HTTP endpoint
    depends_on:
      - mimir
      - loki
    networks:
      - observability

  mimir:
    image: grafana/mimir:2.13.0
    command:
      [
        "-ingester.native-histograms-ingestion-enabled=true",
        "-config.file=/etc/mimir.yaml",
      ]
    # ports:
    #   - "9009:9009"
    volumes:
      - "./conf/mimir.yaml:/etc/mimir.yaml"
    networks:
      - observability

  loki:
    image: grafana/loki:3.4
    command:
      ["--pattern-ingester.enabled=true", "-config.file=/etc/loki/loki.yaml"]
    # ports:
    #   - "3100:3100"
    volumes:
      - "./conf/loki.yaml:/etc/loki/loki.yaml"
    networks:
      - observability

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_FEATURE_TOGGLES_ENABLE=flameGraph traceqlSearch correlations traceQLStreaming metricsSummary traceqlEditor traceToMetrics traceToProfiles datatrails
      - GF_INSTALL_PLUGINS=grafana-lokiexplore-app,grafana-exploretraces-app,grafana-pyroscope-app
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - "grafana-data:/var/lib/grafana"
      - "./grafana/definitions:/var/lib/grafana/dashboards"
      - "./grafana/provisioning:/etc/grafana/provisioning"
    ports:
      - "3000:3000"
    depends_on:
      - mimir
      - loki
    user: root
    networks:
      - observability

  tempo:
    image: grafana/tempo:2.6.0
    # ports:
    #   - "3200:3200"
    #   - "55680:55680"
    #   - "55681:55681"
    #   - "14250:14250"
    command: ["-config.file=/etc/tempo.yaml"]
    networks:
      - observability
    volumes:
      - "./conf/tempo.yaml:/etc/tempo.yaml"

  pyroscope:
    image: grafana/pyroscope:1.8.0
    ports:
      - "4040:4040"
    command: ["server"]
    networks:
      - observability

  # node_exporter:
  #   image: prom/node-exporter:latest
  #   command:
  #     - "--path.rootfs=/host"
  #     - "--no-collector.filesystem"
  #   pid: host
  #   volumes:
  #     - "/proc:/host/proc:ro"
  #     - "/sys:/host/sys:ro"
  #     - "/:/host:ro"
  #   networks:
  #     - observability

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    restart: unless-stopped
    networks:
      - observability

  k6:
    build:
      context: .
      dockerfile: .docker/k6.dockerfile
    environment:
      - K6_OTEL_EXPORTER_TYPE=grpc
      - K6_OTEL_GRPC_EXPORTER_ENDPOINT=otel-collector:4317
      - K6_OTEL_GRPC_EXPORTER_INSECURE=true
      - K6_OTEL_HTTP_EXPORTER_ENDPOINT=otel-collector:4318
      - K6_OTEL_HTTP_EXPORTER_INSECURE=true
      - DOCKER_DEFAULT_PLATFORM=linux/amd64
    volumes:
      - ./.k6:/tests
    networks:
      - observability

networks:
  observability:
    driver: bridge

volumes:
  grafana-data:
